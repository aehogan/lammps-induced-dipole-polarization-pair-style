"LAMMPS WWW Site"_lws - "LAMMPS Documentation"_ld - "LAMMPS Commands"_lc :c

:link(lws,http://lammps.sandia.gov)
:link(ld,Manual.html)
:link(lc,Section_commands.html#comm)

:line

pair_style lj/coul command :h3
pair_style lj/coul/omp command :h3

[Syntax:]

pair_style lj/coul flag_lj flag_coul cutoff (cutoff2) :pre

flag_lj = {long} or {cut} :ulb,l
  {long} = use Kspace long-range summation for the dispersion term 1/r^6
  {cut} = use a cutoff :pre
flag_coul = {long} or {off} :l
  {long} = use Kspace long-range summation for the Coulombic term 1/r
  {off} = omit the Coulombic term :pre
cutoff = global cutoff for LJ (and Coulombic if only 1 cutoff) (distance units) :l
cutoff2 = global cutoff for Coulombic (optional) (distance units) :l,ule

[Examples:]

pair_style lj/coul cut off 2.5
pair_style lj/coul cut long 2.5 4.0
pair_style lj/coul long long 2.5 4.0
pair_coeff * * 1 1
pair_coeff 1 1 1 3 4 :pre

[Description:]

The {lj/coul} style computes the standard 12/6 Lennard-Jones and
Coulombic potentials, given by

:c,image(Eqs/pair_lj.jpg)

:c,image(Eqs/pair_coulomb.jpg)

where C is an energy-conversion constant, Qi and Qj are the charges on
the 2 atoms, epsilon is the dielectric constant which can be set by
the "dielectric"_dielectric.html command, and Rc is the cutoff.  If
one cutoff is specified in the pair_style command, it is used for both
the LJ and Coulombic terms.  If two cutoffs are specified, they are
used as cutoffs for the LJ and Coulombic terms respectively.

The purpose of this pair style is to capture long-range interactions
resulting from both attractive 1/r^6 Lennard-Jones and Coulombic 1/r
interactions.  This is done by use of the {flag_lj} and {flag_coul}
settings.  The "In 't Veld"_#Veld paper has more details on when it is
appropriate to include long-range 1/r^6 interactions, using this
potential.

If {flag_lj} is set to {long}, no cutoff is used on the LJ 1/r^6
dispersion term.  The long-range portion is calculated by using the
"kspace_style ewald/n"_kspace_style.html command.  The specified LJ
cutoff then determines which portion of the LJ interactions are
computed directly by the pair potential versus which part is computed
in reciprocal space via the Kspace style.  If {flag_lj} is set to
{cut}, the LJ interactions are simply cutoff, as with "pair_style
lj/cut"_pair_lj.html.

If {flag_coul} is set to {long}, no cutoff is used on the Coulombic
interactions.  The long-range portion is calculated by using any
style, including {ewald/n} of the "kspace_style"_kspace_style.html
command.  Note that if {flag_lj} is also set to long, then only the
{ewald/n} Kspace style can perform the long-range calculations for
both the LJ and Coulombic interactions.  If {flag_coul} is set to
{off}, Coulombic interactions are not computed.

The following coefficients must be defined for each pair of atoms
types via the "pair_coeff"_pair_coeff.html command as in the examples
above, or in the data file or restart files read by the
"read_data"_read_data.html or "read_restart"_read_restart.html
commands, or by mixing as described below:

epsilon (energy units)
sigma (distance units)
cutoff1 (distance units)
cutoff2 (distance units) :ul

Note that sigma is defined in the LJ formula as the zero-crossing
distance for the potential, not as the energy minimum at 2^(1/6)
sigma.

The latter 2 coefficients are optional.  If not specified, the global
LJ and Coulombic cutoffs specified in the pair_style command are used.
If only one cutoff is specified, it is used as the cutoff for both LJ
and Coulombic interactions for this type pair.  If both coefficients
are specified, they are used as the LJ and Coulombic cutoffs for this
type pair.  Note that if you are using {flag_lj} set to {long}, you
cannot specify a LJ cutoff for an atom type pair, since only one
global LJ cutoff is allowed.  Similarly, if you are using {flag_coul}
set to {long}, you cannot specify a Coulombic cutoff for an atom type
pair, since only one global Coulombic cutoff is allowed.

:line

Styles with a {cuda}, {gpu}, {omp}, or {opt} suffix are functionally
the same as the corresponding style without the suffix.  They have
been optimized to run faster, depending on your available hardware, as
discussed in "Section_accelerate"_Section_accelerate.html of the
manual.  The accelerated styles take the same arguments and should
produce the same results, except for round-off and precision issues.

These accelerated styles are part of the USER-CUDA, GPU, USER-OMP and OPT
packages, respectively.  They are only enabled if LAMMPS was built with
those packages.  See the "Making LAMMPS"_Section_start.html#start_3
section for more info.

You can specify the accelerated styles explicitly in your input script
by including their suffix, or you can use the "-suffix command-line
switch"_Section_start.html#start_7 when you invoke LAMMPS, or you can
use the "suffix"_suffix.html command in your input script.

See "Section_accelerate"_Section_accelerate.html of the manual for
more instructions on how to use the accelerated styles effectively.

:line

[Mixing, shift, table, tail correction, restart, rRESPA info]:

For atom type pairs I,J and I != J, the epsilon and sigma coefficients
and cutoff distance for all of the lj/cut pair styles can be mixed.
The default mix value is {geometric}.  See the "pair_modify" command
for details.

This pair style supports the "pair_modify"_pair_modify.html shift
option for the energy of the Lennard-Jones portion of the pair
interaction, assuming {flag_lj} is {cut}.

This pair style supports the "pair_modify"_pair_modify.html table
option since it can tabulate the short-range portion of the long-range
Coulombic interaction.

This pair style does not support the "pair_modify"_pair_modify.html
tail option for adding a long-range tail correction to the
Lennard-Jones portion of the energy and pressure.

This pair style writes its information to "binary restart
files"_restart.html, so pair_style and pair_coeff commands do not need
to be specified in an input script that reads a restart file.

This pair style supports the use of the {inner}, {middle}, and {outer}
keywords of the "run_style respa"_run_style.html command, meaning the
pairwise forces can be partitioned by distance at different levels of
the rRESPA hierarchy.  See the "run_style"_run_style.html command for
details.

:line

[Restrictions:]

This style is part of the USER-EWALDN package.  It is only enabled if
LAMMPS was built with that package.  See the "Making
LAMMPS"_Section_start.html#start_3 section for more info.

[Related commands:]

"pair_coeff"_pair_coeff.html

[Default:] none

:line

:link(Veld)
[(In 't Veld)] In 't Veld, Ismail, Grest, J Chem Phys (accepted) (2007).
