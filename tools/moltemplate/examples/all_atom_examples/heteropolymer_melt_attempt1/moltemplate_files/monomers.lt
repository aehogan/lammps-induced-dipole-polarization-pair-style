  # ----------------------------------------------------------------------
  # --   General comment:                                               --
  # -- The write() and write_once() commands create and append text to  --
  # -- files (replacing variables beginning with @ or $ with counters.) --
  # -- File names beginning with "In " or "Data " are special.          --
  # -- They will be pasted into the LAMMPS input script and             --
  # -- data files which are generated by moltemplate.  The syntax       --
  # -- of these files is exactly the same as the syntax from the        --
  # -- corresponding sections of a LAMMPS input script or data file.    --
  # ----------------------------------------------------------------------


MonomerTypes {


  PVDF {
    # atom-id  mol-id   atom-type  charge  x      y        z

    write("Data Atoms") {
      $atom:C1  $mol:...  @atom:../C    0.0  -1.000  0.4000  0.00000
      $atom:H1  $mol:...  @atom:../RH   0.0  -1.000  1.000   1.000
      $atom:H2  $mol:...  @atom:../RH   0.0  -1.000  1.000  -1.000
      $atom:C2  $mol:...  @atom:../C    0.0   1.000 -0.4000  0.00000
      $atom:F1  $mol:...  @atom:../RF   0.0   1.000 -1.000   1.000
      $atom:F2  $mol:...  @atom:../RF   0.0   1.000 -1.000  -1.000
    }

    # bond-id   bond-type        atom-id1  atom-id2

    write("Data Bonds") {
      $bond:C1R1  @bond:../sidechain  $atom:C1  $atom:H1
      $bond:C1R2  @bond:../sidechain  $atom:C1  $atom:H2
      $bond:C2R1  @bond:../sidechain  $atom:C2  $atom:F1
      $bond:C2R2  @bond:../sidechain  $atom:C2  $atom:F2
      $bond:C12   @bond:../bb         $atom:C1  $atom:C2
    }
  } # PVDF


  PCTFE {
    # atom-id  mol-id   atom-type  charge  x      y        z

    write("Data Atoms") {
      $atom:C1  $mol:...  @atom:../C    0.0  -1.000  0.4000  0.00000
      $atom:F1  $mol:...  @atom:../RF   0.0  -1.000  1.000   1.000
      $atom:F2  $mol:...  @atom:../RF   0.0  -1.000  1.000  -1.000
      $atom:C2  $mol:...  @atom:../C    0.0   1.000 -0.4000  0.00000
      $atom:F3  $mol:...  @atom:../RF   0.0   1.000 -1.000   1.000
      $atom:CL  $mol:...  @atom:../RCl  0.0   1.000 -1.000  -1.000
    }

    # bond-id   bond-type        atom-id1  atom-id2

    write("Data Bonds") {
      $bond:C1R1  @bond:../sidechain  $atom:C1  $atom:F1
      $bond:C1R2  @bond:../sidechain  $atom:C1  $atom:F2
      $bond:C2R1  @bond:../sidechain  $atom:C2  $atom:F3
      $bond:C2R2  @bond:../sidechain  $atom:C2  $atom:CL
      $bond:C12   @bond:../bb         $atom:C1  $atom:C2
    }
  } # PCTFE


  # atom-type  mass

  write_once("Data Masses") {
    @atom:C    12.0
    @atom:RH    1.0
    @atom:RF   19.0
    @atom:RCl  35.453
  }


  #        atom-type   atom-type   epsilon sigma

  write_once("In Settings") {
    pair_coeff @atom:C   @atom:C     0.20   2.0
    pair_coeff @atom:RH  @atom:RH    0.20   1.0
    pair_coeff @atom:RF  @atom:RF    0.40   2.0
    pair_coeff @atom:RCl @atom:RCl   0.40   2.0
  }


  # bond-type          k     r0

  write_once("Data Bond Coeffs") {
    @bond:sidechain   30.0   1.2
    @bond:bb          30.0   2.0    # "bb" shorthand for "backbone"
  }

  # Although there's no need to define angular interactions (because this 
  # "molecule" only contains two atoms), we define the settings for angles
  # or dihedrals which might be present later when we build a polymer.

  # angle-type         k    theta0

  write_once("Data Angle Coeffs") {
    @angle:backbone   50.00  160
    @angle:sidechain  50.00  120
    @angle:RCR        50.00  120
  }

  # dihedral-type      K1      K2      K3      K4

  write_once("Data Dihedral Coeffs") {
    @dihedral:backbn  1.411036 -0.271016 3.145034 0.0
  }

  #  Rules for determining 3 and 4-body bonded interactions by type

  # angle-type       atomType1 atomType2 atomType3  bondType1 bondType2

  write_once("Data Angles By Type") {
    @angle:backbone  @atom:C   @atom:C  @atom:C    @bond:*   @bond:*
    @angle:sidechain @atom:C   @atom:C  @atom:R*   @bond:*   @bond:*
    @angle:RCR       @atom:R*  @atom:C  @atom:R*   @bond:*   @bond:*
  }

  # dihedral-type AtomType1 AtomType2 AtomType3 AtomType4 bondType1 btyp2 btyp3

  write_once("Data Dihedrals By Type") {
    @dihedral:backbn @atom:C @atom:C @atom:C @atom:C @bond:* @bond:* @bond:*
  }

} # MonomerTypes
